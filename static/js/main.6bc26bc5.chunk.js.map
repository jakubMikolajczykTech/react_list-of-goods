{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","sortData","sort","setState","reverse","reset","this","copyOfGoods","goods","visibleGoods","ALPHABET","a","b","localeCompare","LENGTH","length","Error","getReorderedGoods","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,SAAW,SAACC,GACV,EAAKC,SAAS,CACZL,SAAUI,KARhB,EAYEE,QAAU,WACR,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBAdzB,EAkBEK,MAAQ,WACN,EAAKF,SAAS,CACZL,SAAUJ,EAASK,KACnBC,YAAY,KArBlB,4CAyBE,WAAU,IAAD,OACP,EAAiCM,KAAKT,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZO,EA7DH,SACLC,EADK,GAGJ,IADCV,EACF,EADEA,SAAUE,EACZ,EADYA,WAENS,EAAY,YAAOD,GAEzB,OAAQV,GACN,KAAKJ,EAASgB,SACZD,EAAaP,MAAK,SAACS,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAKlB,EAASoB,OACZL,EAAaP,MAAK,SAACS,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UACzC,MAEF,KAAKrB,EAASK,KACZ,MAEF,QACE,MAAM,IAAIiB,MAAJ,4BAA+BlB,IAOzC,OAJIE,GACFS,EAAaL,UAGRK,EAmCeQ,CAAkBtB,EAAiBW,KAAKT,OAE5D,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYtB,IAAaJ,EAASgB,WAGtCW,QAAS,kBAAM,EAAKpB,SAASP,EAASgB,WARxC,iCAaA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYtB,IAAaJ,EAASoB,SAGtCO,QAAS,kBAAM,EAAKpB,SAASP,EAASoB,SARxC,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAapB,IAGjBqB,QAASf,KAAKF,QARhB,sBAaEJ,GAAcF,IAAaJ,EAASK,OAEhC,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,MAHhB,sBAUR,6BACGE,GAAeA,EAAYe,KAAI,SAAAC,GAAI,OAClC,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eArFrB,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6bc26bc5.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    case SortType.NONE:\n      break;\n\n    default:\n      throw new Error(`Invalid sortType: ${sortType}`);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortData = (sort: SortType) => {\n    this.setState({\n      sortType: sort,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const copyOfGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => this.sortData(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => this.sortData(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE)\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n              )}\n        </div>\n\n        <ul>\n          {copyOfGoods && copyOfGoods.map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}